[package]
categories.workspace = true
description = "Метакрейт, импортирующий все другие крейты через флаги feature"
edition.workspace = true
keywords.workspace = true
license.workspace = true
name = "rsiot"
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version = "0.0.28"


[dependencies]
document-features = { workspace = true }

tokio = { workspace = true, optional = true }
chrono = { workspace = true }
url = { workspace = true }


rsiot-component-core = { workspace = true, optional = true }
rsiot-env-vars = { workspace = true, optional = true }
rsiot-extra-components = { workspace = true, optional = true }
rsiot-http-client = { workspace = true, optional = true }
rsiot-http-server = { workspace = true, optional = true }
rsiot-logging = { workspace = true }
rsiot-messages-core = { workspace = true }
rsiot-modbus-client = { workspace = true, optional = true }
rsiot-plc = { workspace = true, optional = true }
rsiot-redis-publisher = { workspace = true, optional = true }
rsiot-redis-subscriber = { workspace = true, optional = true }
rsiot-websocket-client = { workspace = true, optional = true }
rsiot-websocket-server = { workspace = true, optional = true }
rsiot-timescaledb-storing = { workspace = true, optional = true }

[dev-dependencies]


[features]
## Базовые компоненты
components = [
    "dep:tokio",
    "dep:rsiot-component-core",
    "dep:rsiot-extra-components",
]
## Конфигурирование через переменные
env-vars = ["dep:rsiot-env-vars"]
## Компонент http-клиент
http-client = ["components", "dep:rsiot-http-client"]
## Компонент http-сервер
http-server = ["components", "dep:rsiot-http-server"]
## Компонент Modbus клиент
modbus-client = ["components", "dep:rsiot-modbus-client"]
# Компонент ПЛК
plc = ["components", "dep:rsiot-plc"]
## Компонент публикации сообщений в Redis
redis-publisher = ["components", "dep:rsiot-redis-publisher"]
## Компонент подписики на сообщения из Redis
redis-subscriber = ["components", "dep:rsiot-redis-subscriber"]
## Компонент сохранения в БД TimescaleDB
timescaledb-storing = ["components", "dep:rsiot-timescaledb-storing"]
## Компонент websocket клиента
websocket-client = ["components", "dep:rsiot-websocket-client"]
## Компонент websocket сервера
websocket-server = ["components", "dep:rsiot-websocket-server"]


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
